@model PagedList.IPagedList<PhoneTicket.Web.ViewModels.ListRoomViewModel>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Rooms.css" rel="stylesheet" type="text/css" />

<div class="center">
    <div>
        <span>
            @using (Html.BeginForm("Index", "Rooms", FormMethod.Post, new {style = "display: inline"}))
            {
                <text>Buscar por Nombre</text>
                @Html.TextBox("roomSearch")  
                <input type="submit" value="Buscar" />
            }
        </span>
        <span>
            @Html.ActionLink(
                        linkText: "Agregar Sala",
                        actionName: "Add",
                        routeValues: null ,
                        controllerName: "Rooms",
                        htmlAttributes: null)
        </span>
    </div>

    @if (Model.Count == 0)
    {
        <h2>No hay salas para mostrar</h2>
    }
    else
    { 
        <h2>Salas existentes</h2>

        <table class="center">
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Complejo</th>
                <th>Capacidad</th>
                <th>Estilo</th>
            </tr>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].ComplexName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].Capacity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => Model[i].TypeDescription)
                    </td>
                    <td>
                        @Html.ActionLink(
                            linkText: "Editar",
                            actionName: "Edit",
                            controllerName: "Rooms",
                            routeValues: new { roomId = Model[i].Id },
                            htmlAttributes: null
                            )
                    </td>
                    <td>
                        @Html.ActionLink(
                            linkText: "Borrar",
                            actionName: "Delete",
                            controllerName: "Rooms",
                            routeValues: new { roomId = Model[i].Id },
                            htmlAttributes: new { onclick = "return confirm('¿Está seguro que desea borrar la sala?')"}
                            )
                    </td>
                </tr>
            }

        </table>

        <br />
    
        <label>Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount</label>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))    
    }
</div>