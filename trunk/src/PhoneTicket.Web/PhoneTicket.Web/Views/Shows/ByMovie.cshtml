@model PhoneTicket.Web.ViewModels.ListShowsByMovieViewModel

@{
    ViewBag.Title = "ByMovie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/themes/base/css")
@Styles.Render("~/Content/bootstrap.min.css")
@Styles.Render("~/Content/ListShows.css")

@foreach (var day in this.Model.ShowsPerDay)
{
    <div class="panel panel-danger">
        <div class="panel-heading">
            <div class="panel-title">
                <label>Fecha:</label>
                <span>@day.Key.ToString("yyyy-MM-dd")</span>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                @foreach (var show in day)
                {
                    <div class="col-md-4 show-info @(!show.IsAvailable ? "unavailable-show" : string.Empty)">
                        <span>@show.Time</span>
                        <span>|</span>
                        <span>@show.Complex</span>
                        <span>|</span>
                        <span>@show.Room</span>
                        <span>|</span>
                         <a href="@Url.Action("Details", new { showId = show.Id, movieId = this.Model.MovieId })" >
                            <i class="glyphicon glyphicon-info-sign"></i>
                        </a>
                        @if (show.CanEdit)
                        {
                            <a href="@Url.Action("Edit", new { showId = show.Id })" >
                                <i class="glyphicon glyphicon-edit"></i>
                            </a>
                            <a href="@Url.Action("Delete", new { showId = show.Id, movieId = this.Model.MovieId })" 
                                        onclick="return confirm('¿Está seguro que desea borrar la función?')">
                                <i class="glyphicon glyphicon-remove"></i>
                            </a> 
                        }
                        @if (show.IsAvailable)
                        {
                            <a href="@Url.Action("ChangeAvailability", new { showId = show.Id, movieId = this.Model.MovieId })" 
                                        onclick="return confirm('¿Está seguro que desea marcar la función como no disponible?')">
                                <span class="glyphicon glyphicon-arrow-down"></span>

                            </a>
                        }
                        else
                        {
                            <a href="@Url.Action("ChangeAvailability", new { showId = show.Id, movieId = this.Model.MovieId })" 
                                        onclick="return confirm('¿Está seguro que desea marcar la función como disponible?')">
                                <span class="glyphicon glyphicon-arrow-up"></span>
                            </a>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}